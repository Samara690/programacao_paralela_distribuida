buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.franzbecker:gradle-lombok:2.0")
		classpath("net.saliman:gradle-cobertura-plugin:2.6.0")
		classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2")
	}
}

plugins {
	id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "io.franzbecker.gradle-lombok"
apply plugin: "net.saliman.cobertura"
apply plugin: 'jacoco'
apply plugin: "com.github.kt3k.coveralls"

group = 'com.github.cafecomjavanaresource'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-activemq')
	implementation('org.springframework.boot:spring-boot-starter-web')
//	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacocoTestReport {
	reports {
		xml {
			enabled true // coveralls plugin depends on xml format report
		}

		html {
			enabled true
		}
	}

	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/data/**'])
		})
	}
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
